/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gateway.report;

import gateway.controllers.AttendanceController;
import gateway.controllers.ClassController;
import gateway.controllers.CourseController;
import gateway.controllers.StudentCoursesController;
import gateway.controllers.TeacherController;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pesshala
 */
public class NameListOfAttendanceToClassWithinMonth extends javax.swing.JPanel {

    DefaultTableModel dtm;
    private boolean isconstruct;
    private boolean iscourse;

    /**
     * Creates new form NameListOfAttendanceToClassWithinMonth
     */
    public NameListOfAttendanceToClassWithinMonth() {
        try {
            initComponents();
            dtm = (DefaultTableModel) table.getModel();
            loadTeacher();

        } catch (SQLException ex) {
            Logger.getLogger(NameListOfRegisteredToClass.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NameListOfRegisteredToClass.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboTeacher = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        comboCourse = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        comboClass = new javax.swing.JComboBox();
        button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        comboMonth = new javax.swing.JComboBox();

        setOpaque(false);

        jLabel1.setText("List Of Students Who Attended The Class This Month");

        jLabel3.setText("Teacher       :");

        comboTeacher.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTeacherItemStateChanged(evt);
            }
        });
        comboTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTeacherActionPerformed(evt);
            }
        });

        jLabel2.setText("Course     :");

        comboCourse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCourseItemStateChanged(evt);
            }
        });
        comboCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCourseActionPerformed(evt);
            }
        });

        jLabel4.setText("Class     :");

        comboClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClassActionPerformed(evt);
            }
        });

        button.setText("Show Students of the class");
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonMouseClicked(evt);
            }
        });
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Admission Number", "Student Name", "Number Of Days Attended"
            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel5.setText("Year       :");

        jLabel6.setText("Month    :");

        txtYear.setText("20");

        comboMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "Octomber", "November", "December" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(comboMonth, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(71, 71, 71)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(comboTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(104, 104, 104)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(comboCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(64, 64, 64)
                            .addComponent(jLabel4)
                            .addGap(43, 43, 43)
                            .addComponent(comboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(comboCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(comboTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(button)))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboTeacherItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTeacherItemStateChanged

    }//GEN-LAST:event_comboTeacherItemStateChanged

    private void comboTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTeacherActionPerformed
        try {
            if (isconstruct) {
                comboCourse.removeAllItems();
                iscourse = false;
                String teacher = comboTeacher.getSelectedItem().toString();
                String year = txtYear.getText();
                int month = (comboMonth.getSelectedIndex()) + 1;
                System.out.println(teacher);

                ArrayList<String> courses = CourseController.getTeachersCourses(TeacherController.getTeacherName(teacher));
                for (String course : courses) {
                    comboCourse.addItem(course);
                    System.out.println(course);
                }
                iscourse = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(NameListOfRegisteredToClass.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NameListOfRegisteredToClass.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboTeacherActionPerformed

    private void comboCourseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCourseItemStateChanged

    }//GEN-LAST:event_comboCourseItemStateChanged

    private void comboCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCourseActionPerformed
        try {
            if (iscourse) {
                comboClass.removeAllItems();
                String course = comboCourse.getSelectedItem().toString();
                ArrayList<String> classes = ClassController.getClassesOfCourse(CourseController.getCourseId(course));
                for (String clas : classes) {
                    System.out.println(clas);
                    comboClass.addItem(clas);
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(NameListOfRegisteredToClass.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NameListOfRegisteredToClass.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboCourseActionPerformed

    private void comboClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClassActionPerformed

    }//GEN-LAST:event_comboClassActionPerformed

    private void buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMouseClicked
        SimpleDateFormat sdfYear = new SimpleDateFormat("YYYY");
        SimpleDateFormat sdfMonth = new SimpleDateFormat("MM");
        int thisYear = Integer.parseInt(sdfYear.format(new Date()));
        
        int selectedyear = Integer.parseInt(txtYear.getText());
        int thisMonth = Integer.parseInt(sdfMonth.format(new Date()));
        int selectedMonth = comboMonth.getSelectedIndex() + 1;
        System.out.println("                            thiss year="+thisYear);
        System.out.println("                            selected year="+selectedyear);
        System.out.println("                            thiss month="+thisMonth);
        System.out.println("                            selected month="+selectedMonth);
        if ((selectedyear > thisYear) || (selectedyear == thisYear && selectedMonth > thisMonth)) {
            JOptionPane.showMessageDialog(null, "Selected month is not Valid !!");
        } else {
            try {
                String classId = ClassController.getClassId(comboClass.getSelectedItem().toString());
                System.out.println("************"+classId+"  "+selectedyear+"        "+selectedMonth);
                ArrayList<Object[]> rowDatas = AttendanceController.getAttendedListToClasInAMonth(classId,selectedyear,selectedMonth);
                for (Object[] row : rowDatas) {
                    dtm.addRow(row);
                }
            } catch (SQLException ex) {
                Logger.getLogger(NameListOfRegisteredToClass.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NameListOfRegisteredToClass.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonMouseClicked

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button;
    private javax.swing.JComboBox comboClass;
    private javax.swing.JComboBox comboCourse;
    private javax.swing.JComboBox comboMonth;
    private javax.swing.JComboBox comboTeacher;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
private void loadTeacher() throws SQLException, ClassNotFoundException {
        ArrayList<String[]> teachers = TeacherController.getTeacherName();
        for (String[] teacher : teachers) {
            comboTeacher.addItem(teacher[0]);
        }
        isconstruct = true;
        if (isconstruct) {
            System.out.println("true   true    true   true");
        }
    }
}
