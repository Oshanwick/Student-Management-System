/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gateway.view.home;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.sun.org.apache.xml.internal.dtm.DTM;
import gateway.controllers.ClassController;
import gateway.controllers.CourseController;
import gateway.controllers.GradeController;
import gateway.controllers.StudentController;
import gateway.controllers.StudentCoursesController;
import gateway.controllers.SubjectController;
import gateway.controllers.TimetableController;
import gateway.libraries.CurInstance;
import gateway.model.Student;
import gateway.model.StudentCourses;
//import gateway.controllers.StudentController;
//import gateway.model.Student;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.CropImageFilter;
import java.awt.image.FilteredImageSource;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class AddStudent extends javax.swing.JPanel {

    private boolean isConstructorRun = false;
    private boolean isComboCourseFill = false;

    DefaultTableModel dtm;
    DefaultTableModel dtm2;

    private int camAction = 0;
    Dimension dimension1 = WebcamResolution.QQVGA.getSize(); //java.awt.dimensions // //com.github.sarox.webcam.webCamResolution
    Webcam wCam = null;                            //com.github.sarox.webcam.webcam
    WebcamPanel webcamPanel = null;//com.github.sarox.webcam.webcampanel
    private int y = 1;
    private int takePhotoCheck = 1;

    /**
     * Creates new form AddStudent
     */
    SimpleDateFormat dateFormat = new SimpleDateFormat("YYYY/MM/dd");

    public AddStudent() throws SQLException, ClassNotFoundException {
        initComponents();

        wCam = Webcam.getDefault();
        webcamPanel = new WebcamPanel(wCam, dimension1, false);
        loadWebCamPanel();

        dtm = (DefaultTableModel) tableVenue.getModel();
        dtm2 = (DefaultTableModel) tableSelectedClasses.getModel();
        loadCombos();
        dateDOB.setDateFormat(dateFormat);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtLand = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        comboGrade = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAdress = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        webCamDisplay = new javax.swing.JLabel();
        capIm = new javax.swing.JLabel();
        buttonOnCam = new javax.swing.JButton();
        dateDOB = new org.freixas.jcalendar.JCalendarCombo();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        labelSelectedCourse = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        comboSubject = new javax.swing.JComboBox();
        combocourse = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        combogradeStep2 = new javax.swing.JComboBox();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableSelectedClasses = new javax.swing.JTable();
        buttonRegister = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableVenue = new javax.swing.JTable();
        buttonSelectClass = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        labelStudent = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        buttonRegister1 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();

        setOpaque(false);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 0, 10, 530));

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Student Name");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        jLabel2.setText("Student ID");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, -1));

        jLabel3.setText("Home Adress");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jLabel4.setText("Photo");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        jLabel6.setText("Date of Birth");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, -1, -1));

        jLabel7.setText("Land TP  Number");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, -1, -1));

        jLabel8.setText("Grade");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, -1, -1));

        txtLand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLandKeyReleased(evt);
            }
        });
        jPanel2.add(txtLand, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 260, 20));

        txtMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMobileKeyReleased(evt);
            }
        });
        jPanel2.add(txtMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 260, 20));
        jPanel2.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 260, 20));

        jPanel2.add(comboGrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 100, 20));

        jScrollPane1.setAutoscrolls(true);

        txtAdress.setColumns(20);
        txtAdress.setRows(5);
        jScrollPane1.setViewportView(txtAdress);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 260, 60));

        jLabel11.setText("Step 1");
        jLabel11.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 50, 20));

        jLabel14.setText("Add Student");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        btnAdd.setText("ADD-Student");
        btnAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });
        jPanel2.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 460, 100, 50));

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });
        jPanel2.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 260, 20));

        jLabel9.setText("Mobile TP number");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        webCamDisplay.setBackground(new java.awt.Color(51, 51, 51));
        webCamDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        webCamDisplay.setText("CAMERA");
        webCamDisplay.setOpaque(true);
        webCamDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                webCamDisplayMouseClicked(evt);
            }
        });

        capIm.setBackground(new java.awt.Color(51, 51, 51));
        capIm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        capIm.setOpaque(true);

        buttonOnCam.setText("on camera");
        buttonOnCam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOnCamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(buttonOnCam))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(webCamDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(capIm, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonOnCam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(capIm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(webCamDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));
        jPanel2.add(dateDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 260, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 530));

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Select Course");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, -1, -1));

        jLabel12.setText("Step 2");
        jLabel12.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 10, 50, 20));
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 52, 80, -1));

        jLabel13.setText("Select Course And Class");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, -1));

        jLabel15.setText("Subject  :");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        jLabel17.setText("Course  :");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, -1, -1));

        jPanel4.setOpaque(false);

        jLabel16.setText("Select class for ");

        labelSelectedCourse.setText("...................");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSelectedCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelSelectedCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)))
                .addContainerGap())
        );

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 190, 30));
        jPanel3.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 182, 160, 10));

        comboSubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSubjectItemStateChanged(evt);
            }
        });
        comboSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSubjectActionPerformed(evt);
            }
        });
        jPanel3.add(comboSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 140, 20));

        combocourse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combocourseItemStateChanged(evt);
            }
        });
        combocourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combocourseActionPerformed(evt);
            }
        });
        combocourse.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                combocoursePropertyChange(evt);
            }
        });
        jPanel3.add(combocourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 90, 20));

        jLabel19.setText("Grade  :");
        jPanel3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        combogradeStep2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combogradeStep2ItemStateChanged(evt);
            }
        });
        combogradeStep2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combogradeStep2ActionPerformed(evt);
            }
        });
        jPanel3.add(combogradeStep2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 140, 20));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 10, 70));

        tableSelectedClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course", "Class", "Day", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSelectedClasses.setOpaque(false);
        jScrollPane2.setViewportView(tableSelectedClasses);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 460, 110));

        buttonRegister.setText("Register");
        buttonRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonRegisterMouseClicked(evt);
            }
        });
        buttonRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegisterActionPerformed(evt);
            }
        });
        jPanel3.add(buttonRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 480, 90, 30));

        jLabel20.setText("Selected Classes");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, -1, -1));
        jPanel3.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, 80, -1));

        tableVenue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class", "Day", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableVenue.setOpaque(false);
        jScrollPane3.setViewportView(tableVenue);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 460, 110));

        buttonSelectClass.setText("Select Class\\/");
        buttonSelectClass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSelectClassMouseClicked(evt);
            }
        });
        buttonSelectClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectClassActionPerformed(evt);
            }
        });
        jPanel3.add(buttonSelectClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 310, 90, 30));

        jLabel10.setText("Show Classes \\/");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, 80, 20));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 550, 40));

        labelStudent.setText("....");
        jPanel3.add(labelStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 60, -1));

        jLabel21.setText("Admission  :");
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, -1, -1));

        jButton1.setText("Remove /\\");
            jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jButton1MouseClicked(evt);
                }
            });
            jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 90, 30));

            jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 0, 550, 520));

            buttonRegister1.setText("Done");
            buttonRegister1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    buttonRegister1MouseClicked(evt);
                }
            });
            buttonRegister1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    buttonRegister1ActionPerformed(evt);
                }
            });
            jPanel1.add(buttonRegister1, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 530, 90, 30));
            jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 518, 480, -1));

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
        }// </editor-fold>//GEN-END:initComponents

    private void buttonRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegisterActionPerformed

    }//GEN-LAST:event_buttonRegisterActionPerformed

    private void buttonSelectClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectClassActionPerformed

    }//GEN-LAST:event_buttonSelectClassActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked

    }//GEN-LAST:event_jLabel3MouseClicked

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        try {

            JOptionPane.showConfirmDialog(null, "Is tyhis photo good for your Idfentity", "Confirm Identification Image", JOptionPane.YES_NO_OPTION);
            String id = txtId.getText();
            String name = txtName.getText();
            String adress = txtAdress.getText();
            String DOB = dateFormat.format(dateDOB.getDate());
            System.out.println(DOB);
            String mobile = txtMobile.getText();
            String land = txtLand.getText();
            String grade = GradeController.getGradeId(comboGrade.getSelectedItem().toString());
            String date = CurInstance.Date();
            String photo = "./student/" + id + ".png";
            Student student = new Student(id, date, name, photo, DOB, adress, land, mobile, grade);

            int res;
            try {
                res = StudentController.addStudent(student);
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Added Succesfully");
                    labelStudent.setText(id);
                }
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (SQLException ex) {
            Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAddMouseClicked

    private void onCam() {
        if (camAction == 0) {
            webcamPanel.start();
            camAction = 1;
            buttonOnCam.setText("Off Camera");
        } else if (camAction == 1) {
            webcamPanel.stop();
            camAction = 0;
            buttonOnCam.setText("On Camera");

        }
    }
    private void webCamDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_webCamDisplayMouseClicked
        takePic();
    }//GEN-LAST:event_webCamDisplayMouseClicked

    private void buttonOnCamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOnCamActionPerformed
        onCam();
    }//GEN-LAST:event_buttonOnCamActionPerformed

    private void combogradeStep2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combogradeStep2ItemStateChanged

    }//GEN-LAST:event_combogradeStep2ItemStateChanged

    private void comboSubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSubjectItemStateChanged

    }//GEN-LAST:event_comboSubjectItemStateChanged

    private void combogradeStep2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combogradeStep2ActionPerformed
        if (isConstructorRun) {
            try {
                //System.out.println(comboGrade.getSelectedItem().toString());
                String subject = SubjectController.getSubjectId(comboSubject.getSelectedItem().toString());
                System.out.println(subject);
                String grade = GradeController.getGradeId(combogradeStep2.getSelectedItem().toString());
                System.out.println(grade);
                ArrayList<String> courses = CourseController.getCourseOfGradeAndSubject(subject, grade);
                combocourse.removeAllItems();
//                if(courses==null){
//                    String text="no courses";
//                    combocourse.addItem(text);
//                }else{

                for (String course : courses) {
                    combocourse.addItem(course);
                    isComboCourseFill = true;
//                }
                }
                combocourse.setFocusable(true);
            } catch (SQLException ex) {
                Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_combogradeStep2ActionPerformed

    private void comboSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSubjectActionPerformed
        if (isConstructorRun) {
            try {
                //System.out.println(comboGrade.getSelectedItem().toString());
                String subject = SubjectController.getSubjectId(comboSubject.getSelectedItem().toString());
                System.out.println(subject);
                String grade = GradeController.getGradeId(combogradeStep2.getSelectedItem().toString());
                System.out.println(grade);
                ArrayList<String> courses = CourseController.getCourseOfGradeAndSubject(subject, grade);
                combocourse.removeAllItems();
                for (String course : courses) {
                    combocourse.addItem(course);
                    isComboCourseFill = true;
                }
                combocourse.requestFocus();
            } catch (SQLException ex) {
                Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_comboSubjectActionPerformed

    private void combocourseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combocourseItemStateChanged

    }//GEN-LAST:event_combocourseItemStateChanged

    private void combocourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combocourseActionPerformed

    }//GEN-LAST:event_combocourseActionPerformed

    private void combocoursePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_combocoursePropertyChange
//        if (isComboCourseFill) {
//            labelSelectedCourse.setText(combocourse.getSelectedItem().toString());
//        }

    }//GEN-LAST:event_combocoursePropertyChange

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        try {
            ArrayList<String[]> rowDatas = TimetableController.getClassTimes(CourseController.getCourseId(combocourse.getSelectedItem().toString()));
            for (String[] rowdata : rowDatas) {
                dtm.addRow(rowdata);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel10MouseClicked

    private void buttonSelectClassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSelectClassMouseClicked
        try {
            String courseDesc = CourseController.getCourseDesc(ClassController.getCourseIdFromClassId(ClassController.getClassId(dtm.getValueAt(tableVenue.getSelectedRow(), 0).toString())));
            System.out.println(courseDesc);
            boolean available = false;
            for (int i = 0; i < dtm2.getRowCount(); i++) {
                String CourseSelected = tableSelectedClasses.getValueAt(i, 0).toString();
                if (courseDesc.equals(CourseSelected)) {
                    available = true;
                    break;
                } else {
                    available = false;
                    System.out.println("not this course");
                }
            }
            if (!available) {
                String[] classrow = {dtm.getValueAt(tableVenue.getSelectedRow(), 0).toString(), dtm.getValueAt(tableVenue.getSelectedRow(), 1).toString(), dtm.getValueAt(tableVenue.getSelectedRow(), 2).toString()};
                String course = CourseController.getCourseDesc(ClassController.getCourseIdFromClassId(ClassController.getClassId(classrow[0])));
                String[] row = {course, classrow[0], classrow[1], classrow[2]};
                dtm2.addRow(row);
            } else {
                JOptionPane.showMessageDialog(null, "Class for this course is already selected");
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_buttonSelectClassMouseClicked

    private void buttonRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonRegisterMouseClicked
        try {
            ArrayList<StudentCourses> rowData = new ArrayList<>();
            for (int i = 0; i < dtm2.getRowCount(); i++) {

                StudentCourses studentCourses = new StudentCourses(labelStudent.getText(), CourseController.getCourseId(tableSelectedClasses.getValueAt(i, 0).toString()), ClassController.getClassId(tableSelectedClasses.getValueAt(i, 1).toString()), CurInstance.Date());
                rowData.add(studentCourses);

            }
            int res = StudentCoursesController.addStudentCourse(rowData);
            if (res == tableSelectedClasses.getRowCount()) {
                JOptionPane.showMessageDialog(null, "Rgisterd for courses succesfully");
            } else {
                JOptionPane.showMessageDialog(null, "not Added Succesfully");
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_buttonRegisterMouseClicked

    private void buttonRegister1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonRegister1MouseClicked
        txtAdress.setText("");
        dateDOB.setDate(null);
        txtId.setText("");
        txtLand.setText("");
        txtMobile.setText("");
        txtName.setText("");
        comboGrade.removeAll();
        comboSubject.removeAll();
        combocourse.removeAll();
        combogradeStep2.removeAll();
        dtm.setRowCount(0);
        dtm2.setRowCount(0);
        labelStudent.setText("");
        capIm.setIcon(null);

    }//GEN-LAST:event_buttonRegister1MouseClicked

    private void buttonRegister1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegister1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonRegister1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        dtm2.removeRow(tableSelectedClasses.getSelectedRow());
    }//GEN-LAST:event_jButton1MouseClicked

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        gateway.libraries.Validation.name(txtName);
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed

    }//GEN-LAST:event_txtNameKeyPressed

    private void txtMobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMobileKeyReleased
        gateway.libraries.Validation.phoneNumber(txtMobile);
    }//GEN-LAST:event_txtMobileKeyReleased

    private void txtLandKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLandKeyReleased
        gateway.libraries.Validation.phoneNumber(txtLand);
    }//GEN-LAST:event_txtLandKeyReleased
    private void loadWebCamPanel() {
        wCam.setViewSize(dimension1);
        webcamPanel.setFillArea(true);
        webCamDisplay.setLayout(new FlowLayout());//java.awt.flowlayout
        webCamDisplay.add(webcamPanel);
    }

    private void takePic() {

        if (y == 1) {
            if (wCam.isOpen()) {
                try {
                    takePhotoCheck = 1;
                    ImageIcon II = new ImageIcon(wCam.getImage());  //javax.swing.ImageIcon
                    Image image = II.getImage();   //javax.awt.Image
                    image = createImage(new FilteredImageSource(image.getSource(), new CropImageFilter(30, 0, 115, 144)));   //javax.awt.Image.cropimagefilter
                    capIm.setIcon(new ImageIcon(image));//javax.swing.ImageIcon

                    BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB); //java.awt.graphics
                    Graphics graphics = bufferedImage.createGraphics();  //java.awt.graphics
                    graphics.drawImage(image, 0, 0, null);
                    graphics.dispose();
                    String StudentID = txtId.getText();
                    ImageIO.write(bufferedImage, "png", new File("./student/" + StudentID + ".png"));             //java.io.file    
                    onCam();
                } catch (IOException ex) {                                                         //java.io.
                }
            } else {
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAdd;
    private javax.swing.JButton buttonOnCam;
    private javax.swing.JButton buttonRegister;
    private javax.swing.JButton buttonRegister1;
    private javax.swing.JButton buttonSelectClass;
    private javax.swing.JLabel capIm;
    private javax.swing.JComboBox comboGrade;
    private javax.swing.JComboBox comboSubject;
    private javax.swing.JComboBox combocourse;
    private javax.swing.JComboBox combogradeStep2;
    private org.freixas.jcalendar.JCalendarCombo dateDOB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel labelSelectedCourse;
    private javax.swing.JLabel labelStudent;
    private javax.swing.JTable tableSelectedClasses;
    private javax.swing.JTable tableVenue;
    private javax.swing.JTextArea txtAdress;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLand;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    private javax.swing.JLabel webCamDisplay;
    // End of variables declaration//GEN-END:variables

    private void loadCombos() {
        gradeCombo();
        subjectCombo();
        isConstructorRun = true;
        courseCombo();

    }

    private void gradeCombo() {
        try {
            ArrayList<String[]> rows = GradeController.getGrade();
            for (String[] row : rows) {
                comboGrade.addItem(row[0]);
                combogradeStep2.addItem(row[0]);
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void subjectCombo() {
        try {
            ArrayList<String[]> rows = SubjectController.getSubject();
            for (String[] row : rows) {
                comboSubject.addItem(row[0]);

            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void courseCombo() {
        if (isConstructorRun) {
            try {
                //System.out.println(comboGrade.getSelectedItem().toString());
                String subject = SubjectController.getSubjectId(comboSubject.getSelectedItem().toString());
                System.out.println(subject);
                String grade = GradeController.getGradeId(combogradeStep2.getSelectedItem().toString());
                System.out.println(grade);
                ArrayList<String> courses = CourseController.getCourseOfGradeAndSubject(subject, grade);
                combocourse.removeAllItems();
//                if(courses==null){
//                    String text="no courses";
//                    combocourse.addItem(text);
//                }else{

                for (String course : courses) {
                    combocourse.addItem(course);
//                }
                }
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(AddStudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
